name: reusable-colcon-build-and-test

on:
  workflow_call:
    inputs:
      script-ref:
        required: true
        type: string
      rosdistro:
        required: true
        type: string
      build-depends-repos:
        required: true
        type: string
      target-files:
        required: true
        type: string
      compile-commands-hash:
        required: true
        type: string
    secrets:
      token:
        required: false

jobs:
  clang-tidy-pr:
    runs-on: ubuntu-latest
    container: ros:${{ inputs.rosdistro }}

    steps:
      - name: Checkout repository
        if: ${{ inputs.target-files != '' }}
        uses: actions/checkout@v2

      - name: Install curl
        if: ${{ inputs.target-files != '' }}
        run: |
          apt-get -y update
          apt-get -y install curl

      - name: Install pip
        if: ${{ inputs.target-files != '' }}
        run: |
          apt-get -y -q update
          apt-get -y -q install python3-pip

      - name: Install Clang-Tidy
        if: ${{ inputs.target-files != '' }}
        run: |
          apt-get -y -q update
          apt-get -y -q install clang-tidy

      - name: Show target files
        if: ${{ inputs.target-files != '' }}
        run: |
          echo "target files: ${{ inputs.target-files }}"

      - name: Set git config for private repositories
        if: ${{ inputs.target-files != '' }}
        run: |
          git config --local --unset-all http.https://github.com/.extraheader || true
          git config --global url.https://${{ secrets.token }}@github.com.insteadOf 'https://github.com'

      - name: Clone dependency packages
        if: ${{ inputs.target-files != '' }}
        run: |
          mkdir dependency_ws
          vcs import dependency_ws < ${{ inputs.build-depends-repos }}
          apt-get -y update
          rosdep update
          DEBIAN_FRONTEND=noninteractive rosdep install -y --from-paths . --ignore-src --rosdistro ${{ inputs.rosdistro }}

      - name: Restore build files from cache
        if: ${{ inputs.target-files != '' }}
        uses: actions/cache@v2
        with:
          path: |
            ./build
            ./install
          key: compile-commands-${{ inputs.compile-commands-hash }}

      - name: Retrieve .clang-tidy
        if: ${{ inputs.target-files != '' }}
        run: |
          curl -fsSL -o .clang-tidy \
            https://raw.githubusercontent.com/autowarefoundation/autoware-github-actions/${{ inputs.script-ref }}/.github/.clang-tidy

      - name: Show information of files
        if: ${{ inputs.target-files != '' }}
        continue-on-error: true
        run: |
          ls -a
          echo "---"
          find . -name compile_commands.json

      - name: Analyze
        if: ${{ inputs.target-files != '' }}
        run: |
          clang-tidy -p build/compile_commands.json ${{ inputs.target-files }}
